{"version":3,"sources":["component/loader.tsx","store/generation.ts","store/searchStore.ts","store/stockStore.ts","component/maincard.tsx","component/sidemenu.tsx","component/appbar.tsx","store/todoStore.ts","store/store.ts","component/todo/todo-list.tsx","component/todo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","justifyContent","marginLeft","spacing","CircularIndeterminate","classes","className","CircularProgress","generationSlice","createSlice","name","initialState","generation","reducers","changeGeneration","state","action","payload","actions","getGeneration","generationReducer","search","changeSearch","getSearch","searchReducer","stcok","changeStock","getStock","stockReducer","outer","width","height","backgroundColor","palette","background","default","alignItems","inner","minHeight","flexDirection","message","margin","buttonArea","MainCard","React","useState","setMessage","isLoading","setIsLoading","useSelector","stock","dispatch","useDispatch","reRequst","fetch","then","res","json","JSON","parse","console","log","useEffect","Paper","stringify","Open","Button","color","onClick","variant","list","fullList","TemporaryDrawer","top","left","bottom","right","setState","anchor","toggleDrawer","open","event","type","key","history","useHistory","handleLink","path","push","IconButton","edge","aria-label","Drawer","onClose","clsx","role","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","sideMenuList","grow","flexGrow","menuButton","marginRight","title","breakpoints","up","position","borderRadius","shape","fade","common","white","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","PrimarySearchAppBar","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","MenuItem","AppBar","Toolbar","Typography","noWrap","TextField","label","onChange","target","value","aria-controls","aria-haspopup","currentTarget","todoList","Array","addGeneration","unshift","doneGeneration","targetTodo","find","undefined","isDone","error","deleteGeneration","filter","addTodo","doneTodo","deleteTodo","getTodos","todoReducer","store","configureStore","reducer","paper","CheckboxList","props","todos","handleToggle","del","labelId","dense","Checkbox","checked","tabIndex","disableRipple","inputProps","ListItemSecondaryAction","todoContainer","newTodo","TodoCard","newTodoName","setNewTodoName","isInputError","setIsInputError","inputErrorMessage","setInputErrorMessage","errorHandling","errorMessage","isError","initialTodoName","fullWidth","helperText","uuidv4","App","basename","process","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8d7f3f9.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            justifyContent: 'center',\n            '& > * + *': {\n                marginLeft: theme.spacing(2),\n            },\n        },\n    }),\n);\n\nconst CircularIndeterminate = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CircularProgress />\n        </div>\n    );\n}\n\nexport default CircularIndeterminate;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from './store';\n\ntype Generation = {\n    generation: number\n}\n\nconst initialState: Generation = {\n    generation: 0\n}\n\nexport const generationSlice = createSlice({\n    name: 'generation',\n    initialState,\n    reducers: {\n        changeGeneration: (state, action) => {\n            state.generation = action.payload;\n        },\n    },\n})\n\n// change\nexport const { changeGeneration } = generationSlice.actions;\n\n// get\nexport const getGeneration = (state: RootState) => state.generationReducer.generation;\n\nexport default generationSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from './store';\n\ntype Generation = {\n    search: String\n}\n\nconst initialState: Generation = {\n    search: ''\n}\n\nexport const generationSlice = createSlice({\n    name: 'searchStore',\n    initialState,\n    reducers: {\n        changeGeneration: (state, action) => {\n            state.search = action.payload;\n        },\n    },\n})\n\n// change\nexport const { changeGeneration: changeSearch } = generationSlice.actions;\n\n// get\nexport const getSearch = (state: RootState) => state.searchReducer.search;\n\nexport default generationSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from './store';\n\ntype Generation = {\n    stcok: any\n}\n\nconst initialState: Generation = {\n    stcok: null\n}\n\nexport const generationSlice = createSlice({\n    name: 'stockStore',\n    initialState,\n    reducers: {\n        changeGeneration: (state, action) => {\n            state.stcok = action.payload;\n        },\n    },\n})\n\n// change\nexport const { changeGeneration: changeStock } = generationSlice.actions;\n\n// get\nexport const getStock = (state: RootState) => state.stockReducer.stcok;\n\nexport default generationSlice.reducer\n","import React from 'react';\nimport { Paper, makeStyles, Button } from \"@material-ui/core\";\nimport CircularIndeterminate from './loader';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getGeneration, changeGeneration } from \"../store/generation\";\nimport { getSearch, changeSearch } from \"../store/searchStore\";\nimport { getStock, changeStock } from '../store/stockStore';\n\n// スタイルの記述をする\nconst useStyles = makeStyles(theme => ({\n    outer: {\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: theme.palette.background.default,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n\n    inner: {\n        width: \"720px\",\n        minHeight: \"420px\",\n\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\"\n    },\n\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        margin: \"16px\",\n    },\n\n    buttonArea: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        margin: \"16px\",\n    },\n}));\n\nconst MainCard = () => {\n\n    const classes = useStyles();\n    const [message, setMessage] = React.useState(null);\n    const [isLoading, setIsLoading] = React.useState(true);\n    let generation: number = useSelector(getGeneration);\n    let search: String = useSelector(getSearch);\n    let stock: any = useSelector(getStock);\n    const dispatch = useDispatch();\n\n    const addCount = (): void => {\n        dispatch(changeGeneration(generation += 1));\n        dispatch(changeSearch('add'));\n        setIsLoading(true);\n        reRequst();\n    }\n\n    const minusCount = (): void => {\n        dispatch(changeGeneration(generation += -1));\n        dispatch(changeSearch('minus'));\n    }\n\n    const reRequst = (): void => {\n        fetch(`https://raw.githubusercontent.com/makoto14/lesson-python/main/asset/stock_data/data.json`)\n            .then(res => {\n                const json = res.json();\n                return json;\n            })\n            .then(res => {\n                const json = JSON.parse(res);\n                console.log(json);\n                setMessage(json);\n                dispatch(changeStock(json));\n            })\n            .then(() => setIsLoading(false));\n    }\n\n    React.useEffect(() => {\n        reRequst();\n    }, [])\n\n    return (\n        <div className={classes.outer}>\n            <Paper className={classes.inner}>\n                <div className={classes.message}>\n                    <div className={classes.message}>\n                        {isLoading === null || stock === null ? <CircularIndeterminate></CircularIndeterminate> : JSON.stringify(stock.Open)}\n                    </div>\n                    {/* <ul>\n                        {stock === null ? 'null' :stock.Open.map((value: any) => <li>{value}</li>)}\n                    </ul> */}\n                    <div className={classes.message}>Click count : {generation}</div>\n                    <div className={classes.message}>Search input : {search}</div>\n                </div>\n                <div className={classes.buttonArea}>\n                    <Button color=\"primary\" onClick={minusCount}>Minus</Button>\n                    <Button variant=\"contained\" onClick={addCount}>Add</Button>\n                </div>\n            </Paper>\n        </div>\n    );\n};\n\nexport default MainCard;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DoneIcon from '@material-ui/icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useHistory, Link } from 'react-router-dom';\n\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\nexport default function TemporaryDrawer() {\n    \n    const classes = useStyles();\n\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    \n    const anchor: Anchor = 'left';\n\n    const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n        \n        if (event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n            return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n    };\n\n    let history = useHistory();\n    \n    const handleLink = (path: string): void => {\n        console.log(path);\n        toggleDrawer(false);\n        history.push(path);\n    }\n\n    const sideMenuList = (anchor: Anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(false)}\n            onKeyDown={toggleDrawer(false)}\n        >\n            <List>\n                {['Home'].map((text, index) => (\n                    <ListItem button key={text} onClick={() => handleLink('/')}>\n                        <ListItemIcon><HomeIcon /></ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                    \n                ))}\n            </List>\n            <Divider />\n            <List>\n                {['Todo'].map((text, index) => (\n                    <ListItem button key={text} onClick={() => handleLink('/todo')}>\n                        <ListItemIcon><DoneIcon /></ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                    \n                ))}\n            </List>\n            <Divider />\n            <List>\n                {['Hoge', 'Hoge2'].map((text, index) => (\n                    <ListItem button key={text} onClick={() => handleLink('/hoge')}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                    \n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer(true)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(false)}>\n                    {sideMenuList(anchor)}\n            </Drawer>\n        </div>\n    );\n}\n","import React from 'react';\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport SideMenu from './sidemenu';\nimport { changeSearch } from '../store/searchStore';\nimport { useDispatch } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        grow: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        search: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade(theme.palette.common.white, 0.40),\n            marginRight: theme.spacing(2),\n            marginLeft: 0,\n            width: '100%',\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: theme.spacing(3),\n                width: 'auto',\n            },\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create('width'),\n            width: '100%',\n            [theme.breakpoints.up('md')]: {\n                width: '20ch',\n            },\n        },\n        sectionDesktop: {\n            display: 'none',\n            [theme.breakpoints.up('md')]: {\n                display: 'flex',\n            },\n        },\n    }),\n);\n\nexport default function PrimarySearchAppBar() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const isMenuOpen = Boolean(anchorEl);\n    const dispatch = useDispatch();\n\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleSearch = (event: any) => {\n        dispatch(changeSearch(event.target.value));\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <SideMenu />\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI-Test\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <TextField\n                        id=\"standard-basic\"\n                        label=\"Search\"\n                        color=\"primary\"\n                        onChange={handleSearch}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMenu}\n        </div>\n    );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TodoType } from '../type/TodoType';\nimport { RootState } from './store';\n\ntype Generation = {\n    todoList: Array<TodoType>\n}\n\nconst initialState: Generation = {\n    todoList: new Array<TodoType>()\n}\n\nexport const generationSlice = createSlice({\n    name: 'todoStore',\n    initialState,\n    reducers: {\n        changeGeneration: (state, action) => {\n            state.todoList = action.payload;\n        },\n        addGeneration: (state, action: PayloadAction<TodoType>) => {\n            state.todoList.unshift(action.payload);\n        },\n        doneGeneration: (state, action: PayloadAction<string>) => {\n            const targetTodo = state.todoList.find(value => action.payload === value.id);\n            if (targetTodo === undefined) {\n                console.error(\"undefined todo\");\n                return;\n            }\n            targetTodo.isDone = !targetTodo?.isDone;\n        },\n        deleteGeneration: (state, action: PayloadAction<string>) => {\n            state.todoList = state.todoList.filter(value => action.payload !== value.id);\n        }\n    },\n})\n\n// change\nexport const {\n    changeGeneration: changeTodo,\n    addGeneration: addTodo,\n    doneGeneration: doneTodo,\n    deleteGeneration: deleteTodo,\n} = generationSlice.actions;\n\n// get\nexport const getTodos = (state: RootState) => state.todoReducer.todoList;\n\nexport default generationSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport generationReducer from './generation';\nimport searchReducer from './searchStore';\nimport stockReducer from './stockStore';\nimport todoReducer from './todoStore';\n\nexport const store = configureStore({\n    reducer: {\n        generationReducer: generationReducer,\n        searchReducer: searchReducer,\n        stockReducer: stockReducer,\n        todoReducer: todoReducer,\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { TodoType } from '../../type/TodoType';\nimport { useDispatch } from 'react-redux';\nimport { doneTodo, deleteTodo } from '../../store/todoStore';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            // maxWidth: '600px',\n            backgroundColor: theme.palette.background.paper,\n        },\n    }),\n);\n\nexport default function CheckboxList(props: any) {\n    const todos: Array<TodoType> = props.todos;\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n    const handleToggle = (value: string) => () => {\n        dispatch(doneTodo(value));\n    };\n\n    const del = (value: string) => () => {\n        dispatch(deleteTodo(value));\n    }\n\n    return (\n        <List className={classes.root}>\n            {todos.map((value) => {\n                const labelId = `checkbox-list-label-${value.id}`;\n                const isEitable = false;\n                const changeEditMode = () => !isEitable;\n\n                return (\n                    <ListItem key={value.id} role={undefined} dense button onClick={handleToggle(value.id)}>\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={value.isDone}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{ 'aria-labelledby': labelId }}\n                            />\n                        </ListItemIcon>\n                        <ListItemText id={labelId} primary={value.name} />\n                        <ListItemSecondaryAction>\n                            {/* <IconButton edge=\"end\" aria-label=\"comments\">\n                                <EditIcon />\n                            </IconButton> */}\n                            <IconButton edge=\"end\" aria-label=\"comments\" onClick={del(value.id)}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n}","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTodos, addTodo } from \"../store/todoStore\";\nimport { TodoType } from \"../type/TodoType\";\nimport CheckboxList from \"./todo/todo-list\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            justifyContent: 'center',\n            margin: '24px',\n        },\n        todoContainer: {\n            width: '600px',\n            backgroundColor: theme.palette.background.paper,\n        },\n        newTodo: {\n            display: 'flex'\n        }\n    }),\n);\n\nconst TodoCard = () => {\n    const classes = useStyles();\n    const [newTodoName, setNewTodoName] = React.useState('');\n    const [isInputError, setIsInputError] = React.useState(false);\n    const [inputErrorMessage, setInputErrorMessage] = React.useState('');\n    let todos: any = useSelector(getTodos);\n    const dispatch = useDispatch();\n\n    const add = (): void => {\n        if (errorHandling()) {\n            return;\n        }\n        const newTodo: TodoType = {\n            id: uuidv4(),\n            name: newTodoName,\n            isDone: false\n        }\n        dispatch(addTodo(newTodo));\n        initialTodoName();\n    }\n\n    const errorHandling = (): boolean => {\n        let errorMessage = '';\n        let isError = false;\n        if (newTodoName === '') {\n            isError = true;\n            errorMessage = 'Input string is empty';\n        }\n        setInputErrorMessage(errorMessage);\n        setIsInputError(isError)\n        return isError;\n    }\n\n    const changeNewTodoName = (event: any) => {\n        setNewTodoName(event.target.value);\n    }\n\n    const initialTodoName = () => {\n        setNewTodoName('');\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.todoContainer}>\n                <div className={classes.newTodo}>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"ToDo name\"\n                        color=\"primary\"\n                        fullWidth\n                        value={newTodoName}\n                        onChange={changeNewTodoName}\n                        helperText={inputErrorMessage}\n                        error={isInputError}\n                    />\n                    <Button color=\"primary\" onClick={add}>Add</Button>\n                </div>\n                <CheckboxList todos={todos} />\n            </div>\n            {/* <div>{JSON.stringify(todos)}</div> */}\n        </div>\n    );\n}\n\nexport default TodoCard;","\nimport './App.css';\nimport MainCard from './component/maincard';\nimport PrimarySearchAppBar from './component/appbar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\nimport TodoCard from './component/todo';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n          <PrimarySearchAppBar></PrimarySearchAppBar>\n          <Switch>\n              <Route path='/hoge' component={MainCard} />\n              <Route path='/todo' component={TodoCard} />\n          </Switch>\n        </Provider>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}